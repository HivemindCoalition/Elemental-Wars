<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialization Code
//UI Chooser
Current_UI = 0; //this will correspond to a state machine
current_Menu = 1;


//UI Scaling
UI_scale = 0;

//resource area variables
res_area_x = 0;
res_area_y = 0;
res_area_height = 100;
res_area_width = 300;

//Body health variables
bod_area_x = res_area_x;
bod_area_y = res_area_y;
bod_area_height = 100;
bod_area_width = 100;

//resource bar variables
res_bar_height = 20;
res_bar_x = 100;
res_bar_y = 0;
health_bar_width = 200;
stam_bar_width = 200;
meta_bar_width = 200;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Resource Bars
if(room == test_room)
{
    draw_rectangle_color(res_area_x,res_area_y,res_area_x+res_area_width,res_area_y+res_area_height, c_black, c_black, c_black, c_black, true);//outlining resource area
    draw_rectangle_color(bod_area_x,bod_area_y,bod_area_x+bod_area_width,bod_area_y+bod_area_height, c_black, c_black, c_black, c_black, true);//outlining body health area
    UI_scale = 0;
    //health
    draw_rectangle_color(res_bar_x,res_bar_y+0,health_bar_width,res_bar_y+20, c_black, c_black, c_black, c_black, true);
    draw_rectangle_color(res_bar_x,res_bar_y+0,health_bar_width,res_bar_y+20, c_red, c_red, c_red, c_red, false);
    //stamina
    draw_rectangle_color(res_bar_x,res_bar_y+20,stam_bar_width,res_bar_y+40, c_black, c_black, c_black, c_black, true);
    draw_rectangle_color(res_bar_x,res_bar_y+20,stam_bar_width,res_bar_y+40, c_yellow, c_yellow, c_yellow, c_yellow, false);
    //S.E.
    draw_rectangle_color(res_bar_x,res_bar_y+40,meta_bar_width,res_bar_y+60, c_black, c_black, c_black, c_black, true);
    draw_rectangle_color(res_bar_x,res_bar_y+40,meta_bar_width,res_bar_y+60, c_blue, c_blue, c_blue, c_blue, false);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inventory UI
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu UI
if(room == menu)
{
    if(current_Menu == 0)//no menu
    {
    }
    if(current_Menu == 1)//game start screen
    {
        draw_sprite(Button_Start,0,250,400);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
